[{"D:\\reactProject\\practice-tsx\\src\\index.tsx":"1","D:\\reactProject\\practice-tsx\\src\\reportWebVitals.js":"2","D:\\reactProject\\practice-tsx\\src\\App.tsx":"3","D:\\reactProject\\practice-tsx\\src\\router.tsx":"4","D:\\reactProject\\practice-tsx\\src\\views\\Home.tsx":"5","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Test.tsx":"6","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Affix.tsx":"7","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\DatePicker.tsx":"8","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Transfer.tsx":"9","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Grid.tsx":"10","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Form.tsx":"11","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Breadcrumb.tsx":"12","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Table.tsx":"13","D:\\reactProject\\practice-tsx\\src\\store\\actionCreated.tsx":"14","D:\\reactProject\\practice-tsx\\src\\store\\actionType.tsx":"15","D:\\reactProject\\practice-tsx\\src\\store\\index.tsx":"16","D:\\reactProject\\practice-tsx\\src\\store\\reducer.tsx":"17"},{"size":949,"mtime":1611133457413,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":142,"mtime":1611111982937,"results":"21","hashOfConfig":"19"},{"size":1384,"mtime":1611122826179,"results":"22","hashOfConfig":"19"},{"size":6000,"mtime":1611133313670,"results":"23","hashOfConfig":"19"},{"size":359,"mtime":1611122123144,"results":"24","hashOfConfig":"19"},{"size":1059,"mtime":1611131273161,"results":"25","hashOfConfig":"19"},{"size":1757,"mtime":1611126431184,"results":"26","hashOfConfig":"19"},{"size":4183,"mtime":1611130311006,"results":"27","hashOfConfig":"19"},{"size":308,"mtime":1611122524927,"results":"28","hashOfConfig":"19"},{"size":1690,"mtime":1611128664094,"results":"29","hashOfConfig":"19"},{"size":938,"mtime":1611135451782,"results":"30","hashOfConfig":"19"},{"size":2597,"mtime":1611131059202,"results":"31","hashOfConfig":"19"},{"size":116,"mtime":1611131854435,"results":"32","hashOfConfig":"19"},{"size":29,"mtime":1611131650388,"results":"33","hashOfConfig":"19"},{"size":343,"mtime":1611132630210,"results":"34","hashOfConfig":"19"},{"size":667,"mtime":1611134186468,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bf1br3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"D:\\reactProject\\practice-tsx\\src\\index.tsx",[],["79","80"],"D:\\reactProject\\practice-tsx\\src\\reportWebVitals.js",[],["81","82"],"D:\\reactProject\\practice-tsx\\src\\App.tsx",[],"D:\\reactProject\\practice-tsx\\src\\router.tsx",[],"D:\\reactProject\\practice-tsx\\src\\views\\Home.tsx",[],"D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Test.tsx",["83"],"D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Affix.tsx",[],"D:\\reactProject\\practice-tsx\\src\\views\\commponent\\DatePicker.tsx",["84","85"],"import * as React from 'react';\r\n// import { Component } from 'react';\r\n\r\nimport { DatePicker, Space } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst monthFormat = 'YYYY/MM';\r\n\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\nconst customFormat = (value: any) => `custom format: ${value.format(dateFormat)}`;\r\n\r\nexport interface Props {}\r\n\r\nexport interface State {}\r\n\r\nclass DatePicker1 extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // this.state = { :  };\r\n  }\r\n\r\n  handle = (value: any) => {\r\n    // console.log(value);\r\n    value.map((res: any) => {\r\n      console.log(moment(res._d).format('YYYY-MM-DD'));\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {' '}\r\n        <Space direction=\"vertical\" size={12}>\r\n          <DatePicker\r\n            defaultValue={moment('2015/01/01', dateFormat)}\r\n            format={dateFormat}\r\n          />\r\n          <DatePicker\r\n            defaultValue={moment('01/01/2015', dateFormatList[0])}\r\n            format={dateFormatList}\r\n          />\r\n          <DatePicker\r\n            defaultValue={moment('2015/01', monthFormat)}\r\n            format={monthFormat}\r\n            picker=\"month\"\r\n          />\r\n          <RangePicker\r\n            defaultValue={[\r\n              moment('2015/01/01', dateFormat),\r\n              moment('2015/01/01', dateFormat),\r\n            ]}\r\n            format={dateFormat}\r\n            onChange={this.handle}\r\n          />\r\n          <DatePicker\r\n            defaultValue={moment('2015/01/01', dateFormat)}\r\n            format={customFormat}\r\n          />\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker1;\r\n","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Transfer.tsx",["86"],"import * as React from 'react';\r\nimport { Transfer, Switch, Table, Tag } from 'antd';\r\nimport difference from 'lodash/difference';\r\n\r\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }: any) => (\r\n  <Transfer {...restProps} showSelectAll={false}>\r\n    {({\r\n      direction,\r\n      filteredItems,\r\n      onItemSelectAll,\r\n      onItemSelect,\r\n      selectedKeys: listSelectedKeys,\r\n      disabled: listDisabled,\r\n    }) => {\r\n      const columns = direction === 'left' ? leftColumns : rightColumns;\r\n\r\n      const rowSelection = {\r\n        getCheckboxProps: (item: any) => ({ disabled: listDisabled || item.disabled }),\r\n        onSelectAll(selected: any, selectedRows: any) {\r\n          const treeSelectedKeys = selectedRows\r\n            .filter((item: any) => !item.disabled)\r\n            .map(({ key }: any) => key);\r\n          const diffKeys = selected\r\n            ? difference(treeSelectedKeys, listSelectedKeys)\r\n            : difference(listSelectedKeys, treeSelectedKeys);\r\n          onItemSelectAll(diffKeys, selected);\r\n        },\r\n        onSelect({ key }: any, selected: any) {\r\n          onItemSelect(key, selected);\r\n        },\r\n        selectedRowKeys: listSelectedKeys,\r\n      };\r\n\r\n      const mystyle: any = { pointerEvents: listDisabled ? 'none' : null };\r\n      return (\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={filteredItems}\r\n          size=\"small\"\r\n          style={mystyle}\r\n          onRow={({ key, disabled: itemDisabled }: any) => ({\r\n            onClick: () => {\r\n              if (itemDisabled || listDisabled) return;\r\n              onItemSelect(key, !listSelectedKeys.includes(key));\r\n            },\r\n          })}\r\n        />\r\n      );\r\n    }}\r\n  </Transfer>\r\n);\r\n\r\nconst mockTags = ['cat', 'dog', 'bird'];\r\n\r\nconst mockData: any = [];\r\nfor (let i = 0; i < 20; i++) {\r\n  mockData.push({\r\n    key: i.toString(),\r\n    title: `content${i + 1}`,\r\n    description: `description of content${i + 1}`,\r\n    disabled: i % 4 === 0,\r\n    tag: mockTags[i % 3],\r\n  });\r\n}\r\n\r\nconst originTargetKeys = mockData\r\n  .filter((item: any) => +item.key % 3 > 1)\r\n  .map((item: any) => item.key);\r\n\r\nconst leftTableColumns = [\r\n  {\r\n    dataIndex: 'title',\r\n    title: 'Name',\r\n  },\r\n  {\r\n    dataIndex: 'tag',\r\n    title: 'Tag',\r\n    render: (tag: any) => <Tag>{tag}</Tag>,\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    title: 'Description',\r\n  },\r\n];\r\nconst rightTableColumns = [\r\n  {\r\n    dataIndex: 'title',\r\n    title: 'Name',\r\n  },\r\n];\r\n\r\nexport interface Props {}\r\n\r\nexport interface State {}\r\n\r\nclass Transfer1 extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // this.state = { :  };\r\n  }\r\n\r\n  state = {\r\n    targetKeys: originTargetKeys,\r\n    disabled: false,\r\n    showSearch: false,\r\n  };\r\n\r\n  onChange = (nextTargetKeys: any) => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n  };\r\n\r\n  triggerDisable = (disabled: any) => {\r\n    this.setState({ disabled });\r\n  };\r\n\r\n  triggerShowSearch = (showSearch: any) => {\r\n    this.setState({ showSearch });\r\n  };\r\n  render() {\r\n    const { targetKeys, disabled, showSearch } = this.state;\r\n    return (\r\n      <div>\r\n        {' '}\r\n        <TableTransfer\r\n          dataSource={mockData}\r\n          targetKeys={targetKeys}\r\n          disabled={disabled}\r\n          showSearch={showSearch}\r\n          onChange={this.onChange}\r\n          filterOption={(inputValue: any, item: any) =>\r\n            item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\r\n          }\r\n          leftColumns={leftTableColumns}\r\n          rightColumns={rightTableColumns}\r\n        />\r\n        <Switch\r\n          unCheckedChildren=\"disabled\"\r\n          checkedChildren=\"disabled\"\r\n          checked={disabled}\r\n          onChange={this.triggerDisable}\r\n          style={{ marginTop: 16 }}\r\n        />\r\n        <Switch\r\n          unCheckedChildren=\"showSearch\"\r\n          checkedChildren=\"showSearch\"\r\n          checked={showSearch}\r\n          onChange={this.triggerShowSearch}\r\n          style={{ marginTop: 16 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transfer1;\r\n","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Grid.tsx",["87"],"import * as React from 'react';\r\n\r\nexport interface Props {}\r\n\r\nexport interface State {}\r\n\r\nclass Grid1 extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // this.state = { :  };\r\n  }\r\n  render() {\r\n    return <div>栏格</div>;\r\n  }\r\n}\r\n\r\nexport default Grid1;\r\n","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Form.tsx",["88"],"import * as React from 'react';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nexport interface Props {}\r\n\r\nexport interface State {}\r\n\r\nclass Form1 extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // this.state = { :  };\r\n  }\r\n\r\n  onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form1;\r\n","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Breadcrumb.tsx",["89"],"import * as React from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nexport interface Props {\r\n  list: any;\r\n}\r\n\r\nexport interface State {\r\n  // handle:any\r\n  //   onClick: any;\r\n}\r\n\r\nclass Breadcrumb1 extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // this.state = { :  };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/DatePicker1\">\r\n            <HomeOutlined />\r\n          </Breadcrumb.Item>\r\n          {this.props.list.map((res) => {\r\n            return <Breadcrumb.Item href={res.spell}>{res.name}</Breadcrumb.Item>;\r\n          })}\r\n        </Breadcrumb>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state: any) => {\r\n  return {\r\n    list: state.list,\r\n  };\r\n};\r\n\r\nexport default connect(stateToProps, null)(Breadcrumb1);\r\n","D:\\reactProject\\practice-tsx\\src\\views\\commponent\\Table.tsx",[],"D:\\reactProject\\practice-tsx\\src\\store\\actionCreated.tsx",[],["90","91"],"D:\\reactProject\\practice-tsx\\src\\store\\actionType.tsx",[],"D:\\reactProject\\practice-tsx\\src\\store\\index.tsx",[],"D:\\reactProject\\practice-tsx\\src\\store\\reducer.tsx",["92"],"import { LIST } from './actionType';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n};\r\n\r\n/*\r\n  @state=defaultState:默认store定义值\r\n  @action:通过dispatch需要改变得值\r\n  @CHANGE_INPUT: input框change事件，改变得value与inputVal绑定\r\n  @ADD_ITEM: 点击提交按钮，将inputVal放入li中\r\n  @DEL_ITEM: 点击哪个li删除哪个\r\n*/\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n\r\n  switch (action.type) {\r\n    case LIST:\r\n      newState.list = action.value;\r\n      //   console.log(newState.list);\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n  return newState;\r\n};\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":3,"nodeType":"99","messageId":"100","endLine":14,"endColumn":4},{"ruleId":"97","severity":1,"message":"98","line":21,"column":3,"nodeType":"99","messageId":"100","endLine":24,"endColumn":4},{"ruleId":"101","severity":1,"message":"102","line":28,"column":26,"nodeType":"103","messageId":"104","endLine":28,"endColumn":28},{"ruleId":"97","severity":1,"message":"98","line":98,"column":3,"nodeType":"99","messageId":"100","endLine":101,"endColumn":4},{"ruleId":"97","severity":1,"message":"98","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":11,"endColumn":4},{"ruleId":"97","severity":1,"message":"98","line":18,"column":3,"nodeType":"99","messageId":"100","endLine":21,"endColumn":4},{"ruleId":"97","severity":1,"message":"98","line":17,"column":3,"nodeType":"99","messageId":"100","endLine":20,"endColumn":4},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":15,"column":1,"nodeType":"109","endLine":27,"endColumn":3},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["110"],["111"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]